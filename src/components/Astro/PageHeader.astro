---
/**
 * @description Component for creating a flexible page header with optional image and pattern background
 * @param {Props} props - PageHeader configuration
 * @example
 * ```astro
 * // Basic header with just text
 * <PageHeader
 *   heading="Welcome"
 *   description="Learn more about our services"
 * />
 *
 * // Header with image
 * <PageHeader
 *   heading="About Us"
 *   description="Meet our team"
 *   image={teamImage}
 *   imageAlt="Team photo"
 * />
 *
 * // Header with pattern background
 * <PageHeader
 *   heading="Services"
 *   description="What we offer"
 *   backgroundPattern="circuit"
 *   patternOpacity={0.1}
 * />
 *
 * // Full featured header
 * <PageHeader
 *   heading="Portfolio"
 *   description="Our latest work"
 *   image={portfolioImage}
 *   imageAlt="Project showcase"
 *   animateImage={true}
 *   backgroundPattern="dots"
 *   patternOpacity={0.2}
 *   class="my-custom-header"
 * />
 * ```
 * @note
 * - Responsive layout with mobile-first design
 * - Optional animated image with spin-and-grow effect
 * - Configurable pattern background with opacity control
 * - Theme-based styling and rounded corners
 * - Balanced text wrapping for headings
 * - Staggered build-in animations for text elements
 */

import type { AstroBuiltinAttributes } from "astro";
import type { ImageMetadata } from "astro";
import PatternBackground from "@components/Astro/utils/PatternBackground.astro";
import Image from "astro/components/Image.astro";

export interface Props {
	/** Main heading text */
	heading: string;
	/** Optional subheading or description text */
	description?: string;
	/** Optional image to display */
	image?: ImageMetadata;
	/** Alt text for the image */
	imageAlt?: string;
	/** Controls image animation (default: true) */
	animateImage?: boolean;
	/** Pattern name for background decoration */
	backgroundPattern?: string;
	/** Opacity value for background pattern (0-1) */
	patternOpacity?: number;
	/** Optional CSS classes */
	class?: string | AstroBuiltinAttributes["class:list"];
}

const {
	heading,
	description,
	image,
	imageAlt,
	animateImage = true,
	backgroundPattern,
	patternOpacity,
	class: className,
} = Astro.props;
---

<div
	class:list={[
		"relative flex flex-col items-center justify-between w-full px-4 pt-14 pb-4 -mt-12 md:flex-row md:pt-24 md:pb-24",
		className,
	]}
>
	{
		backgroundPattern && (
			<PatternBackground
				pattern={backgroundPattern}
				patternOpacity={patternOpacity}
			/>
		)
	}
	<div class="flex flex-col items-start justify-center md:w-1/2 mb-8 md:mb-0">
		<h2
			class="font-display text-5xl font-medium tracking-tight text-neutral-950 [text-wrap:balance] sm:text-7xl build-in"
		>
			{heading}
		</h2>
		<p class="mt-4 text-xl text-theme-primary build-in">{description}</p>
	</div>

	{
		image && (
			<div class="md:w-1/2 md:pl-8">
				<div class="relative overflow-hidden rounded-full aspect-square">
					<Image
						src={image}
						alt={imageAlt ?? "Image"}
						class:list={[
							"w-full h-full object-cover",
							{ "spin-and-grow": animateImage },
							{ "rounded-theme": true },
						]}
						width={500}
						height={500}
						loading="eager"
					/>
				</div>
			</div>
		)
	}
</div>

<style>
	h2.build-in {
		animation-delay: 0.2s;
	}

	p.build-in {
		animation-delay: 0.4s;
	}
</style>
